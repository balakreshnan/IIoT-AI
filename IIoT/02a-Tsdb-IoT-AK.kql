#connect cluster('igniteadxsource.eastus2').database('Occupancy')

// Sample Rows
Thermostats
| sample 100

// Date range
Thermostats
| summarize min(EnqueuedTimeUTC), max(EnqueuedTimeUTC)

// Count
Thermostats
| count

// Calc average by minute for past 7 days?
Thermostats
| where EnqueuedTimeUTC > ago(7d)
| where DeviceId == '637086755190714287'
| summarize avg(Temp) by bin(EnqueuedTimeUTC,1m)
| render timechart 

// Check for missing data based on avg temp by minute in past 5 hours
Thermostats
| where EnqueuedTimeUTC > ago(5h)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) on EnqueuedTimeUTC from ago(5h) to now() step 1m   
| render timechart 

// Fill linear: Performs linear interpolation of missing values in a series
// series_fill_linear()
Thermostats
| where EnqueuedTimeUTC > ago(5h)
| where DeviceId == '637086755190714287'
| make-series AvgTempWithDefault=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(5h) to now() step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTempWithDefault)
| project EnqueuedTimeUTC, NoGapsTemp 
| render timechart 

// What will be the temperature for next 15 minutes?
Thermostats
| where EnqueuedTimeUTC > ago(5h)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(5h) to now()+15m step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| extend forecast = series_decompose_forecast(NoGapsTemp, 15)
| render timechart with(title='Forecasting for next 15 min by Time Series Decomposition')

// Anomaly detection
Thermostats
| where EnqueuedTimeUTC > ago(5h)
| where DeviceId == '637086755190714287'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(5h) to now() step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| extend anomalies = series_decompose_anomalies(NoGapsTemp,1)
| render anomalychart with(anomalycolumns=anomalies)

// Anomalies across all devices
Thermostats
| where EnqueuedTimeUTC > ago(5h)
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(5h) to now() step 1m by DeviceId
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, DeviceId, NoGapsTemp
| extend anomalies = series_decompose_anomalies(NoGapsTemp, 1)
| mv-expand EnqueuedTimeUTC, anomalies, NoGapsTemp
| where anomalies == 1


// How much data do we have?
.show extents
| summarize sum(OriginalSize), sum(ExtentSize) by TableName
| where TableName startswith "Thermostats"
| extend compRatio = sum_OriginalSize / sum_ExtentSize 

// Machines in the cluster
.show cluster